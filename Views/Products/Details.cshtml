@model List<ASM.Models.Product>
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewData["Title"] = "Details";

}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500" rel="stylesheet">
    <!-- CSS -->
    <link href="~/assets/css/style.css" rel="stylesheet">
    <meta name="robots" content="noindex,follow" />

</head>

<body>
    <main class="container">

        <!-- Left Column / Headphones Image -->
        <div class="left-column">
            <!-- Product Description -->
            @{
                var uniqueGroupIds = Model.Select(p => p.GroupId).Distinct();
            }

            @foreach (var groupId in uniqueGroupIds)
            {
                var products = Model.Where(p => p.GroupId == groupId);

                foreach (var product in products)
                {
                    <img data-image="@product.ColorDetail.Color.ToLower()" src="/images/ProductImage/@product.Image"
                         class="active" alt="">
                }
            }
        </div>


        <!-- Right Column -->
        <div class="right-column">

            <!-- Product Description -->
            <div class="product-description">
                <span>@Model[0].Category.Name</span>
                <h1>@Model[0].ProductName</h1>
                <p>@Model[0].Description</p>
            </div>
            

            <!-- Product Configuration -->
            <div class="product-configuration">

                <!-- Product Color -->
                <div class="product-color">
                    <span>Color</span>

                    <div class="color-choose">
                        @{
                            var uniqueColors = Model.Select(m => m.ColorDetail.Color.ToLower()).Distinct();
                        }
                        @foreach(var product in uniqueColors)
                        {
                            <div>
                                <input data-image="@product" type="radio" id="@product" name="color" value="@product" checked>
                                <label for="@product"><span></span></label>
                            </div>
                        }
                        @*<div>
                            <input data-image="red" type="radio" id="red" name="color" value="red" checked>
                            <label for="red"><span></span></label>
                        </div>
                        <div>
                            <input data-image="blue" type="radio" id="blue" name="color" value="blue">
                            <label for="blue"><span></span></label>
                        </div>
                        <div>
                            <input data-image="black" type="radio" id="black" name="color" value="black">
                            <label for="black"><span></span></label>
                        </div>*@
                    </div>

                </div>

                <!-- Cable Configuration -->
                <div class="cable-config">
                    <span>Size</span>

                    <div class="cable-choose">
                        @{
                            var uniqueSizes = Model.Select(m => m.Size.SizeNumber).Distinct();
                        }
                        @foreach (var size in uniqueSizes)
                        {
                            <button>@size</button>
                        }
                    </div>

                    <a href="#">How to dress up like a model</a>
                </div>
            </div>

            <!-- Product Pricing -->
            <div class="product-price">
                <span>@Model[0].Price$</span>
                <a href="#" class="cart-btn">Add to cart</a>
            </div>
        </div>
    </main>

    <!-- Scripts -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.1.1/jquery.min.js" charset="utf-8"></script>
    <script src="~/assets/js/script.js" charset="utf-8"></script>
</body>
</html>
